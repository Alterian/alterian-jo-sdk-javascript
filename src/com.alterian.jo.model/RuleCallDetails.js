/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RuleCallDetails model module.
 * @module com.alterian.jo.model/RuleCallDetails
 * @version 4.29.139
 */
class RuleCallDetails {
    /**
     * Constructs a new <code>RuleCallDetails</code>.
     * @alias module:com.alterian.jo.model/RuleCallDetails
     */
    constructor() { 
        
        RuleCallDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuleCallDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/RuleCallDetails} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/RuleCallDetails} The populated <code>RuleCallDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleCallDetails();

            if (data.hasOwnProperty('stepName')) {
                obj['stepName'] = ApiClient.convertToType(data['stepName'], 'String');
            }
            if (data.hasOwnProperty('client')) {
                obj['client'] = ApiClient.convertToType(data['client'], 'String');
            }
            if (data.hasOwnProperty('ruleName')) {
                obj['ruleName'] = ApiClient.convertToType(data['ruleName'], 'String');
            }
            if (data.hasOwnProperty('ruleUrl')) {
                obj['ruleUrl'] = ApiClient.convertToType(data['ruleUrl'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuleCallDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuleCallDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['stepName'] && !(typeof data['stepName'] === 'string' || data['stepName'] instanceof String)) {
            throw new Error("Expected the field `stepName` to be a primitive type in the JSON string but got " + data['stepName']);
        }
        // ensure the json data is a string
        if (data['client'] && !(typeof data['client'] === 'string' || data['client'] instanceof String)) {
            throw new Error("Expected the field `client` to be a primitive type in the JSON string but got " + data['client']);
        }
        // ensure the json data is a string
        if (data['ruleName'] && !(typeof data['ruleName'] === 'string' || data['ruleName'] instanceof String)) {
            throw new Error("Expected the field `ruleName` to be a primitive type in the JSON string but got " + data['ruleName']);
        }
        // ensure the json data is a string
        if (data['ruleUrl'] && !(typeof data['ruleUrl'] === 'string' || data['ruleUrl'] instanceof String)) {
            throw new Error("Expected the field `ruleUrl` to be a primitive type in the JSON string but got " + data['ruleUrl']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }

        return true;
    }


}



/**
 * @member {String} stepName
 */
RuleCallDetails.prototype['stepName'] = undefined;

/**
 * @member {String} client
 */
RuleCallDetails.prototype['client'] = undefined;

/**
 * @member {String} ruleName
 */
RuleCallDetails.prototype['ruleName'] = undefined;

/**
 * @member {String} ruleUrl
 */
RuleCallDetails.prototype['ruleUrl'] = undefined;

/**
 * @member {String} target
 */
RuleCallDetails.prototype['target'] = undefined;






export default RuleCallDetails;

