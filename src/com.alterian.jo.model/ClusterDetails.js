/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Cluster from './Cluster';
import ServerSettings from './ServerSettings';

/**
 * The ClusterDetails model module.
 * @module com.alterian.jo.model/ClusterDetails
 * @version 4.30.49
 */
class ClusterDetails {
    /**
     * Constructs a new <code>ClusterDetails</code>.
     * @alias module:com.alterian.jo.model/ClusterDetails
     * @implements module:com.alterian.jo.model/Cluster
     */
    constructor() { 
        Cluster.initialize(this);
        ClusterDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/ClusterDetails} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/ClusterDetails} The populated <code>ClusterDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterDetails();
            Cluster.constructFromObject(data, obj);

            if (data.hasOwnProperty('nodeName')) {
                obj['nodeName'] = ApiClient.convertToType(data['nodeName'], 'String');
            }
            if (data.hasOwnProperty('public_ip')) {
                obj['public_ip'] = ApiClient.convertToType(data['public_ip'], 'String');
            }
            if (data.hasOwnProperty('lastSeen')) {
                obj['lastSeen'] = ApiClient.convertToType(data['lastSeen'], 'Date');
            }
            if (data.hasOwnProperty('restartCount')) {
                obj['restartCount'] = ApiClient.convertToType(data['restartCount'], 'Number');
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('firstDownTime')) {
                obj['firstDownTime'] = ApiClient.convertToType(data['firstDownTime'], 'String');
            }
            if (data.hasOwnProperty('nodeDescription')) {
                obj['nodeDescription'] = ApiClient.convertToType(data['nodeDescription'], 'String');
            }
            if (data.hasOwnProperty('reportedBy')) {
                obj['reportedBy'] = ApiClient.convertToType(data['reportedBy'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('consistency')) {
                obj['consistency'] = ApiClient.convertToType(data['consistency'], 'String');
            }
            if (data.hasOwnProperty('bootstrapVersion')) {
                obj['bootstrapVersion'] = ApiClient.convertToType(data['bootstrapVersion'], 'Number');
            }
            if (data.hasOwnProperty('serverSettings')) {
                obj['serverSettings'] = ApiClient.convertToType(data['serverSettings'], [ServerSettings]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nodeName'] && !(typeof data['nodeName'] === 'string' || data['nodeName'] instanceof String)) {
            throw new Error("Expected the field `nodeName` to be a primitive type in the JSON string but got " + data['nodeName']);
        }
        // ensure the json data is a string
        if (data['public_ip'] && !(typeof data['public_ip'] === 'string' || data['public_ip'] instanceof String)) {
            throw new Error("Expected the field `public_ip` to be a primitive type in the JSON string but got " + data['public_ip']);
        }
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['firstDownTime'] && !(typeof data['firstDownTime'] === 'string' || data['firstDownTime'] instanceof String)) {
            throw new Error("Expected the field `firstDownTime` to be a primitive type in the JSON string but got " + data['firstDownTime']);
        }
        // ensure the json data is a string
        if (data['nodeDescription'] && !(typeof data['nodeDescription'] === 'string' || data['nodeDescription'] instanceof String)) {
            throw new Error("Expected the field `nodeDescription` to be a primitive type in the JSON string but got " + data['nodeDescription']);
        }
        // ensure the json data is a string
        if (data['reportedBy'] && !(typeof data['reportedBy'] === 'string' || data['reportedBy'] instanceof String)) {
            throw new Error("Expected the field `reportedBy` to be a primitive type in the JSON string but got " + data['reportedBy']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // ensure the json data is a string
        if (data['consistency'] && !(typeof data['consistency'] === 'string' || data['consistency'] instanceof String)) {
            throw new Error("Expected the field `consistency` to be a primitive type in the JSON string but got " + data['consistency']);
        }
        if (data['serverSettings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serverSettings'])) {
                throw new Error("Expected the field `serverSettings` to be an array in the JSON data but got " + data['serverSettings']);
            }
            // validate the optional field `serverSettings` (array)
            for (const item of data['serverSettings']) {
                ServerSettings.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} nodeName
 */
ClusterDetails.prototype['nodeName'] = undefined;

/**
 * The public ip of the new instance
 * @member {String} public_ip
 */
ClusterDetails.prototype['public_ip'] = undefined;

/**
 * @member {Date} lastSeen
 */
ClusterDetails.prototype['lastSeen'] = undefined;

/**
 * @member {Number} restartCount
 */
ClusterDetails.prototype['restartCount'] = undefined;

/**
 * The internal ip address of the new instance
 * @member {String} host
 */
ClusterDetails.prototype['host'] = undefined;

/**
 * @member {String} state
 */
ClusterDetails.prototype['state'] = undefined;

/**
 * @member {String} firstDownTime
 */
ClusterDetails.prototype['firstDownTime'] = undefined;

/**
 * @member {String} nodeDescription
 */
ClusterDetails.prototype['nodeDescription'] = undefined;

/**
 * @member {String} reportedBy
 */
ClusterDetails.prototype['reportedBy'] = undefined;

/**
 * The version number of the instance
 * @member {String} version
 */
ClusterDetails.prototype['version'] = undefined;

/**
 * @member {String} consistency
 */
ClusterDetails.prototype['consistency'] = undefined;

/**
 * @member {Number} bootstrapVersion
 */
ClusterDetails.prototype['bootstrapVersion'] = undefined;

/**
 * @member {Array.<module:com.alterian.jo.model/ServerSettings>} serverSettings
 */
ClusterDetails.prototype['serverSettings'] = undefined;


// Implement Cluster interface:
/**
 * @member {String} nodeName
 */
Cluster.prototype['nodeName'] = undefined;
/**
 * The public ip of the new instance
 * @member {String} public_ip
 */
Cluster.prototype['public_ip'] = undefined;
/**
 * @member {Date} lastSeen
 */
Cluster.prototype['lastSeen'] = undefined;
/**
 * @member {Number} restartCount
 */
Cluster.prototype['restartCount'] = undefined;
/**
 * The internal ip address of the new instance
 * @member {String} host
 */
Cluster.prototype['host'] = undefined;
/**
 * @member {String} state
 */
Cluster.prototype['state'] = undefined;
/**
 * @member {String} firstDownTime
 */
Cluster.prototype['firstDownTime'] = undefined;
/**
 * @member {String} nodeDescription
 */
Cluster.prototype['nodeDescription'] = undefined;
/**
 * @member {String} reportedBy
 */
Cluster.prototype['reportedBy'] = undefined;
/**
 * The version number of the instance
 * @member {String} version
 */
Cluster.prototype['version'] = undefined;
/**
 * @member {String} consistency
 */
Cluster.prototype['consistency'] = undefined;
/**
 * @member {Number} bootstrapVersion
 */
Cluster.prototype['bootstrapVersion'] = undefined;




export default ClusterDetails;

