/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueueField model module.
 * @module com.alterian.jo.model/QueueField
 * @version 4.30.49
 */
class QueueField {
    /**
     * Constructs a new <code>QueueField</code>.
     * @alias module:com.alterian.jo.model/QueueField
     */
    constructor() { 
        
        QueueField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueueField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/QueueField} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/QueueField} The populated <code>QueueField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueueField();

            if (data.hasOwnProperty('isSystem')) {
                obj['isSystem'] = ApiClient.convertToType(data['isSystem'], 'Boolean');
            }
            if (data.hasOwnProperty('streamKey')) {
                obj['streamKey'] = ApiClient.convertToType(data['streamKey'], 'String');
            }
            if (data.hasOwnProperty('indexLevel')) {
                obj['indexLevel'] = ApiClient.convertToType(data['indexLevel'], 'Number');
            }
            if (data.hasOwnProperty('storageHint')) {
                obj['storageHint'] = ApiClient.convertToType(data['storageHint'], 'String');
            }
            if (data.hasOwnProperty('dataType')) {
                obj['dataType'] = ApiClient.convertToType(data['dataType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
            }
            if (data.hasOwnProperty('issankey')) {
                obj['issankey'] = ApiClient.convertToType(data['issankey'], 'Boolean');
            }
            if (data.hasOwnProperty('precision')) {
                obj['precision'] = ApiClient.convertToType(data['precision'], 'Number');
            }
            if (data.hasOwnProperty('keyName')) {
                obj['keyName'] = ApiClient.convertToType(data['keyName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueueField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueueField</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['streamKey'] && !(typeof data['streamKey'] === 'string' || data['streamKey'] instanceof String)) {
            throw new Error("Expected the field `streamKey` to be a primitive type in the JSON string but got " + data['streamKey']);
        }
        // ensure the json data is a string
        if (data['storageHint'] && !(typeof data['storageHint'] === 'string' || data['storageHint'] instanceof String)) {
            throw new Error("Expected the field `storageHint` to be a primitive type in the JSON string but got " + data['storageHint']);
        }
        // ensure the json data is a string
        if (data['dataType'] && !(typeof data['dataType'] === 'string' || data['dataType'] instanceof String)) {
            throw new Error("Expected the field `dataType` to be a primitive type in the JSON string but got " + data['dataType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['keyName'] && !(typeof data['keyName'] === 'string' || data['keyName'] instanceof String)) {
            throw new Error("Expected the field `keyName` to be a primitive type in the JSON string but got " + data['keyName']);
        }

        return true;
    }


}



/**
 * @member {Boolean} isSystem
 */
QueueField.prototype['isSystem'] = undefined;

/**
 * @member {String} streamKey
 */
QueueField.prototype['streamKey'] = undefined;

/**
 * @member {Number} indexLevel
 */
QueueField.prototype['indexLevel'] = undefined;

/**
 * @member {String} storageHint
 */
QueueField.prototype['storageHint'] = undefined;

/**
 * @member {String} dataType
 */
QueueField.prototype['dataType'] = undefined;

/**
 * @member {String} name
 */
QueueField.prototype['name'] = undefined;

/**
 * @member {Number} width
 */
QueueField.prototype['width'] = undefined;

/**
 * @member {Boolean} required
 */
QueueField.prototype['required'] = undefined;

/**
 * @member {Boolean} issankey
 */
QueueField.prototype['issankey'] = undefined;

/**
 * @member {Number} precision
 */
QueueField.prototype['precision'] = undefined;

/**
 * @member {String} keyName
 */
QueueField.prototype['keyName'] = undefined;






export default QueueField;

