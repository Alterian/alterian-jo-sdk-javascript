/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClusterStreamData model module.
 * @module com.alterian.jo.model/ClusterStreamData
 * @version 4.30.49
 */
class ClusterStreamData {
    /**
     * Constructs a new <code>ClusterStreamData</code>.
     * @alias module:com.alterian.jo.model/ClusterStreamData
     */
    constructor() { 
        
        ClusterStreamData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterStreamData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/ClusterStreamData} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/ClusterStreamData} The populated <code>ClusterStreamData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterStreamData();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('planId')) {
                obj['planId'] = ApiClient.convertToType(data['planId'], 'String');
            }
            if (data.hasOwnProperty('totalRxBytes')) {
                obj['totalRxBytes'] = ApiClient.convertToType(data['totalRxBytes'], 'Number');
            }
            if (data.hasOwnProperty('currentRxBytes')) {
                obj['currentRxBytes'] = ApiClient.convertToType(data['currentRxBytes'], 'Number');
            }
            if (data.hasOwnProperty('rxPercentage')) {
                obj['rxPercentage'] = ApiClient.convertToType(data['rxPercentage'], 'Number');
            }
            if (data.hasOwnProperty('totalTxBytes')) {
                obj['totalTxBytes'] = ApiClient.convertToType(data['totalTxBytes'], 'Number');
            }
            if (data.hasOwnProperty('currentTxBytes')) {
                obj['currentTxBytes'] = ApiClient.convertToType(data['currentTxBytes'], 'Number');
            }
            if (data.hasOwnProperty('txPercentage')) {
                obj['txPercentage'] = ApiClient.convertToType(data['txPercentage'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterStreamData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterStreamData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['planId'] && !(typeof data['planId'] === 'string' || data['planId'] instanceof String)) {
            throw new Error("Expected the field `planId` to be a primitive type in the JSON string but got " + data['planId']);
        }

        return true;
    }


}



/**
 * @member {String} description
 */
ClusterStreamData.prototype['description'] = undefined;

/**
 * @member {String} planId
 */
ClusterStreamData.prototype['planId'] = undefined;

/**
 * @member {Number} totalRxBytes
 */
ClusterStreamData.prototype['totalRxBytes'] = undefined;

/**
 * @member {Number} currentRxBytes
 */
ClusterStreamData.prototype['currentRxBytes'] = undefined;

/**
 * @member {Number} rxPercentage
 */
ClusterStreamData.prototype['rxPercentage'] = undefined;

/**
 * @member {Number} totalTxBytes
 */
ClusterStreamData.prototype['totalTxBytes'] = undefined;

/**
 * @member {Number} currentTxBytes
 */
ClusterStreamData.prototype['currentTxBytes'] = undefined;

/**
 * @member {Number} txPercentage
 */
ClusterStreamData.prototype['txPercentage'] = undefined;






export default ClusterStreamData;

