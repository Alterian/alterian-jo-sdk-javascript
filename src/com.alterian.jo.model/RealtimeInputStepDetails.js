/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RealtimeInputStepHeader from './RealtimeInputStepHeader';

/**
 * The RealtimeInputStepDetails model module.
 * @module com.alterian.jo.model/RealtimeInputStepDetails
 * @version 4.29.139
 */
class RealtimeInputStepDetails {
    /**
     * Constructs a new <code>RealtimeInputStepDetails</code>.
     * @alias module:com.alterian.jo.model/RealtimeInputStepDetails
     */
    constructor() { 
        
        RealtimeInputStepDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RealtimeInputStepDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/RealtimeInputStepDetails} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/RealtimeInputStepDetails} The populated <code>RealtimeInputStepDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RealtimeInputStepDetails();

            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], [RealtimeInputStepHeader]);
            }
            if (data.hasOwnProperty('repeatTestData')) {
                obj['repeatTestData'] = ApiClient.convertToType(data['repeatTestData'], 'Boolean');
            }
            if (data.hasOwnProperty('timeoutHttpCode')) {
                obj['timeoutHttpCode'] = ApiClient.convertToType(data['timeoutHttpCode'], 'String');
            }
            if (data.hasOwnProperty('defaultResponseContentType')) {
                obj['defaultResponseContentType'] = ApiClient.convertToType(data['defaultResponseContentType'], 'String');
            }
            if (data.hasOwnProperty('overflowProtection')) {
                obj['overflowProtection'] = ApiClient.convertToType(data['overflowProtection'], 'Boolean');
            }
            if (data.hasOwnProperty('defaultHttpCode')) {
                obj['defaultHttpCode'] = ApiClient.convertToType(data['defaultHttpCode'], 'String');
            }
            if (data.hasOwnProperty('stepName')) {
                obj['stepName'] = ApiClient.convertToType(data['stepName'], 'String');
            }
            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'String');
            }
            if (data.hasOwnProperty('useTestData')) {
                obj['useTestData'] = ApiClient.convertToType(data['useTestData'], 'Boolean');
            }
            if (data.hasOwnProperty('timeoutValue')) {
                obj['timeoutValue'] = ApiClient.convertToType(data['timeoutValue'], 'String');
            }
            if (data.hasOwnProperty('timeoutMilliseconds')) {
                obj['timeoutMilliseconds'] = ApiClient.convertToType(data['timeoutMilliseconds'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
            }
            if (data.hasOwnProperty('requestContentType')) {
                obj['requestContentType'] = ApiClient.convertToType(data['requestContentType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RealtimeInputStepDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RealtimeInputStepDetails</code>.
     */
    static validateJSON(data) {
        if (data['headers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['headers'])) {
                throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
            }
            // validate the optional field `headers` (array)
            for (const item of data['headers']) {
                RealtimeInputStepHeader.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeoutHttpCode'] && !(typeof data['timeoutHttpCode'] === 'string' || data['timeoutHttpCode'] instanceof String)) {
            throw new Error("Expected the field `timeoutHttpCode` to be a primitive type in the JSON string but got " + data['timeoutHttpCode']);
        }
        // ensure the json data is a string
        if (data['defaultResponseContentType'] && !(typeof data['defaultResponseContentType'] === 'string' || data['defaultResponseContentType'] instanceof String)) {
            throw new Error("Expected the field `defaultResponseContentType` to be a primitive type in the JSON string but got " + data['defaultResponseContentType']);
        }
        // ensure the json data is a string
        if (data['defaultHttpCode'] && !(typeof data['defaultHttpCode'] === 'string' || data['defaultHttpCode'] instanceof String)) {
            throw new Error("Expected the field `defaultHttpCode` to be a primitive type in the JSON string but got " + data['defaultHttpCode']);
        }
        // ensure the json data is a string
        if (data['stepName'] && !(typeof data['stepName'] === 'string' || data['stepName'] instanceof String)) {
            throw new Error("Expected the field `stepName` to be a primitive type in the JSON string but got " + data['stepName']);
        }
        // ensure the json data is a string
        if (data['defaultValue'] && !(typeof data['defaultValue'] === 'string' || data['defaultValue'] instanceof String)) {
            throw new Error("Expected the field `defaultValue` to be a primitive type in the JSON string but got " + data['defaultValue']);
        }
        // ensure the json data is a string
        if (data['timeoutValue'] && !(typeof data['timeoutValue'] === 'string' || data['timeoutValue'] instanceof String)) {
            throw new Error("Expected the field `timeoutValue` to be a primitive type in the JSON string but got " + data['timeoutValue']);
        }
        // ensure the json data is a string
        if (data['timeoutMilliseconds'] && !(typeof data['timeoutMilliseconds'] === 'string' || data['timeoutMilliseconds'] instanceof String)) {
            throw new Error("Expected the field `timeoutMilliseconds` to be a primitive type in the JSON string but got " + data['timeoutMilliseconds']);
        }
        // ensure the json data is a string
        if (data['priority'] && !(typeof data['priority'] === 'string' || data['priority'] instanceof String)) {
            throw new Error("Expected the field `priority` to be a primitive type in the JSON string but got " + data['priority']);
        }
        // ensure the json data is a string
        if (data['requestContentType'] && !(typeof data['requestContentType'] === 'string' || data['requestContentType'] instanceof String)) {
            throw new Error("Expected the field `requestContentType` to be a primitive type in the JSON string but got " + data['requestContentType']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:com.alterian.jo.model/RealtimeInputStepHeader>} headers
 */
RealtimeInputStepDetails.prototype['headers'] = undefined;

/**
 * @member {Boolean} repeatTestData
 */
RealtimeInputStepDetails.prototype['repeatTestData'] = undefined;

/**
 * @member {String} timeoutHttpCode
 */
RealtimeInputStepDetails.prototype['timeoutHttpCode'] = undefined;

/**
 * @member {String} defaultResponseContentType
 */
RealtimeInputStepDetails.prototype['defaultResponseContentType'] = undefined;

/**
 * @member {Boolean} overflowProtection
 */
RealtimeInputStepDetails.prototype['overflowProtection'] = undefined;

/**
 * @member {String} defaultHttpCode
 */
RealtimeInputStepDetails.prototype['defaultHttpCode'] = undefined;

/**
 * @member {String} stepName
 */
RealtimeInputStepDetails.prototype['stepName'] = undefined;

/**
 * @member {String} defaultValue
 */
RealtimeInputStepDetails.prototype['defaultValue'] = undefined;

/**
 * @member {Boolean} useTestData
 */
RealtimeInputStepDetails.prototype['useTestData'] = undefined;

/**
 * @member {String} timeoutValue
 */
RealtimeInputStepDetails.prototype['timeoutValue'] = undefined;

/**
 * @member {String} timeoutMilliseconds
 */
RealtimeInputStepDetails.prototype['timeoutMilliseconds'] = undefined;

/**
 * @member {String} priority
 */
RealtimeInputStepDetails.prototype['priority'] = undefined;

/**
 * @member {String} requestContentType
 */
RealtimeInputStepDetails.prototype['requestContentType'] = undefined;






export default RealtimeInputStepDetails;

