/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ParameterCopyDetails model module.
 * @module com.alterian.jo.model/ParameterCopyDetails
 * @version 4.29.139
 */
class ParameterCopyDetails {
    /**
     * Constructs a new <code>ParameterCopyDetails</code>.
     * @alias module:com.alterian.jo.model/ParameterCopyDetails
     * @param newName {String} global param name
     */
    constructor(newName) { 
        
        ParameterCopyDetails.initialize(this, newName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, newName) { 
        obj['newName'] = newName;
    }

    /**
     * Constructs a <code>ParameterCopyDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/ParameterCopyDetails} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/ParameterCopyDetails} The populated <code>ParameterCopyDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ParameterCopyDetails();

            if (data.hasOwnProperty('newClient')) {
                obj['newClient'] = ApiClient.convertToType(data['newClient'], 'String');
            }
            if (data.hasOwnProperty('newName')) {
                obj['newName'] = ApiClient.convertToType(data['newName'], 'String');
            }
            if (data.hasOwnProperty('removeOriginal')) {
                obj['removeOriginal'] = ApiClient.convertToType(data['removeOriginal'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ParameterCopyDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ParameterCopyDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ParameterCopyDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['newClient'] && !(typeof data['newClient'] === 'string' || data['newClient'] instanceof String)) {
            throw new Error("Expected the field `newClient` to be a primitive type in the JSON string but got " + data['newClient']);
        }
        // ensure the json data is a string
        if (data['newName'] && !(typeof data['newName'] === 'string' || data['newName'] instanceof String)) {
            throw new Error("Expected the field `newName` to be a primitive type in the JSON string but got " + data['newName']);
        }

        return true;
    }


}

ParameterCopyDetails.RequiredProperties = ["newName"];

/**
 * (Optional) name of the client where the copy should be made
 * @member {String} newClient
 */
ParameterCopyDetails.prototype['newClient'] = undefined;

/**
 * global param name
 * @member {String} newName
 */
ParameterCopyDetails.prototype['newName'] = undefined;

/**
 * remove the original parameter after creating the copy (essentially a move / rename)
 * @member {Boolean} removeOriginal
 * @default false
 */
ParameterCopyDetails.prototype['removeOriginal'] = false;






export default ParameterCopyDetails;

