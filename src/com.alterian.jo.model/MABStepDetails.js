/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MABVariant from './MABVariant';

/**
 * The MABStepDetails model module.
 * @module com.alterian.jo.model/MABStepDetails
 * @version 4.29.139
 */
class MABStepDetails {
    /**
     * Constructs a new <code>MABStepDetails</code>.
     * @alias module:com.alterian.jo.model/MABStepDetails
     */
    constructor() { 
        
        MABStepDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MABStepDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/MABStepDetails} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/MABStepDetails} The populated <code>MABStepDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MABStepDetails();

            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('fieldKey')) {
                obj['fieldKey'] = ApiClient.convertToType(data['fieldKey'], 'String');
            }
            if (data.hasOwnProperty('parameterKey')) {
                obj['parameterKey'] = ApiClient.convertToType(data['parameterKey'], 'String');
            }
            if (data.hasOwnProperty('parameterExperimentationFrequency')) {
                obj['parameterExperimentationFrequency'] = ApiClient.convertToType(data['parameterExperimentationFrequency'], 'String');
            }
            if (data.hasOwnProperty('parameterMabMode')) {
                obj['parameterMabMode'] = ApiClient.convertToType(data['parameterMabMode'], 'String');
            }
            if (data.hasOwnProperty('parameterStatisticalSignificance')) {
                obj['parameterStatisticalSignificance'] = ApiClient.convertToType(data['parameterStatisticalSignificance'], 'String');
            }
            if (data.hasOwnProperty('parameterTable')) {
                obj['parameterTable'] = ApiClient.convertToType(data['parameterTable'], 'String');
            }
            if (data.hasOwnProperty('reportingFields')) {
                obj['reportingFields'] = ApiClient.convertToType(data['reportingFields'], 'Boolean');
            }
            if (data.hasOwnProperty('seed')) {
                obj['seed'] = ApiClient.convertToType(data['seed'], 'Number');
            }
            if (data.hasOwnProperty('staticMabMode')) {
                obj['staticMabMode'] = ApiClient.convertToType(data['staticMabMode'], 'String');
            }
            if (data.hasOwnProperty('staticExperimentationFrequency')) {
                obj['staticExperimentationFrequency'] = ApiClient.convertToType(data['staticExperimentationFrequency'], 'Number');
            }
            if (data.hasOwnProperty('staticKey')) {
                obj['staticKey'] = ApiClient.convertToType(data['staticKey'], 'String');
            }
            if (data.hasOwnProperty('staticStatisticalSignificance')) {
                obj['staticStatisticalSignificance'] = ApiClient.convertToType(data['staticStatisticalSignificance'], 'String');
            }
            if (data.hasOwnProperty('staticTable')) {
                obj['staticTable'] = ApiClient.convertToType(data['staticTable'], 'String');
            }
            if (data.hasOwnProperty('stepName')) {
                obj['stepName'] = ApiClient.convertToType(data['stepName'], 'String');
            }
            if (data.hasOwnProperty('variants')) {
                obj['variants'] = ApiClient.convertToType(data['variants'], [MABVariant]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MABStepDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MABStepDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['field'] && !(typeof data['field'] === 'string' || data['field'] instanceof String)) {
            throw new Error("Expected the field `field` to be a primitive type in the JSON string but got " + data['field']);
        }
        // ensure the json data is a string
        if (data['fieldKey'] && !(typeof data['fieldKey'] === 'string' || data['fieldKey'] instanceof String)) {
            throw new Error("Expected the field `fieldKey` to be a primitive type in the JSON string but got " + data['fieldKey']);
        }
        // ensure the json data is a string
        if (data['parameterKey'] && !(typeof data['parameterKey'] === 'string' || data['parameterKey'] instanceof String)) {
            throw new Error("Expected the field `parameterKey` to be a primitive type in the JSON string but got " + data['parameterKey']);
        }
        // ensure the json data is a string
        if (data['parameterExperimentationFrequency'] && !(typeof data['parameterExperimentationFrequency'] === 'string' || data['parameterExperimentationFrequency'] instanceof String)) {
            throw new Error("Expected the field `parameterExperimentationFrequency` to be a primitive type in the JSON string but got " + data['parameterExperimentationFrequency']);
        }
        // ensure the json data is a string
        if (data['parameterMabMode'] && !(typeof data['parameterMabMode'] === 'string' || data['parameterMabMode'] instanceof String)) {
            throw new Error("Expected the field `parameterMabMode` to be a primitive type in the JSON string but got " + data['parameterMabMode']);
        }
        // ensure the json data is a string
        if (data['parameterStatisticalSignificance'] && !(typeof data['parameterStatisticalSignificance'] === 'string' || data['parameterStatisticalSignificance'] instanceof String)) {
            throw new Error("Expected the field `parameterStatisticalSignificance` to be a primitive type in the JSON string but got " + data['parameterStatisticalSignificance']);
        }
        // ensure the json data is a string
        if (data['parameterTable'] && !(typeof data['parameterTable'] === 'string' || data['parameterTable'] instanceof String)) {
            throw new Error("Expected the field `parameterTable` to be a primitive type in the JSON string but got " + data['parameterTable']);
        }
        // ensure the json data is a string
        if (data['staticMabMode'] && !(typeof data['staticMabMode'] === 'string' || data['staticMabMode'] instanceof String)) {
            throw new Error("Expected the field `staticMabMode` to be a primitive type in the JSON string but got " + data['staticMabMode']);
        }
        // ensure the json data is a string
        if (data['staticKey'] && !(typeof data['staticKey'] === 'string' || data['staticKey'] instanceof String)) {
            throw new Error("Expected the field `staticKey` to be a primitive type in the JSON string but got " + data['staticKey']);
        }
        // ensure the json data is a string
        if (data['staticStatisticalSignificance'] && !(typeof data['staticStatisticalSignificance'] === 'string' || data['staticStatisticalSignificance'] instanceof String)) {
            throw new Error("Expected the field `staticStatisticalSignificance` to be a primitive type in the JSON string but got " + data['staticStatisticalSignificance']);
        }
        // ensure the json data is a string
        if (data['staticTable'] && !(typeof data['staticTable'] === 'string' || data['staticTable'] instanceof String)) {
            throw new Error("Expected the field `staticTable` to be a primitive type in the JSON string but got " + data['staticTable']);
        }
        // ensure the json data is a string
        if (data['stepName'] && !(typeof data['stepName'] === 'string' || data['stepName'] instanceof String)) {
            throw new Error("Expected the field `stepName` to be a primitive type in the JSON string but got " + data['stepName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['variants'])) {
            throw new Error("Expected the field `variants` to be an array in the JSON data but got " + data['variants']);
        }

        return true;
    }


}



/**
 * @member {String} field
 */
MABStepDetails.prototype['field'] = undefined;

/**
 * @member {String} fieldKey
 */
MABStepDetails.prototype['fieldKey'] = undefined;

/**
 * @member {String} parameterKey
 */
MABStepDetails.prototype['parameterKey'] = undefined;

/**
 * @member {String} parameterExperimentationFrequency
 */
MABStepDetails.prototype['parameterExperimentationFrequency'] = undefined;

/**
 * @member {String} parameterMabMode
 */
MABStepDetails.prototype['parameterMabMode'] = undefined;

/**
 * @member {String} parameterStatisticalSignificance
 */
MABStepDetails.prototype['parameterStatisticalSignificance'] = undefined;

/**
 * @member {String} parameterTable
 */
MABStepDetails.prototype['parameterTable'] = undefined;

/**
 * @member {Boolean} reportingFields
 */
MABStepDetails.prototype['reportingFields'] = undefined;

/**
 * @member {Number} seed
 */
MABStepDetails.prototype['seed'] = undefined;

/**
 * @member {String} staticMabMode
 */
MABStepDetails.prototype['staticMabMode'] = undefined;

/**
 * @member {Number} staticExperimentationFrequency
 */
MABStepDetails.prototype['staticExperimentationFrequency'] = undefined;

/**
 * @member {String} staticKey
 */
MABStepDetails.prototype['staticKey'] = undefined;

/**
 * @member {String} staticStatisticalSignificance
 */
MABStepDetails.prototype['staticStatisticalSignificance'] = undefined;

/**
 * @member {String} staticTable
 */
MABStepDetails.prototype['staticTable'] = undefined;

/**
 * @member {String} stepName
 */
MABStepDetails.prototype['stepName'] = undefined;

/**
 * @member {Array.<module:com.alterian.jo.model/MABVariant>} variants
 */
MABStepDetails.prototype['variants'] = undefined;






export default MABStepDetails;

