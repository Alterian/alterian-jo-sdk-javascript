/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiError from './ApiError';
import ClusterDetails from './ClusterDetails';
import ClusterResponseAllOfRouteTable from './ClusterResponseAllOfRouteTable';
import Success from './Success';
import SuccessCursor from './SuccessCursor';

/**
 * The ClusterResponse model module.
 * @module com.alterian.jo.model/ClusterResponse
 * @version 4.30.49
 */
class ClusterResponse {
    /**
     * Constructs a new <code>ClusterResponse</code>.
     * @alias module:com.alterian.jo.model/ClusterResponse
     * @implements module:com.alterian.jo.model/Success
     * @implements module:com.alterian.jo.model/ApiError
     */
    constructor() { 
        Success.initialize(this);ApiError.initialize(this);
        ClusterResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/ClusterResponse} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/ClusterResponse} The populated <code>ClusterResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterResponse();
            Success.constructFromObject(data, obj);
            ApiError.constructFromObject(data, obj);

            if (data.hasOwnProperty('cursor')) {
                obj['cursor'] = SuccessCursor.constructFromObject(data['cursor']);
            }
            if (data.hasOwnProperty('debug')) {
                obj['debug'] = ApiClient.convertToType(data['debug'], 'String');
            }
            if (data.hasOwnProperty('exceptionType')) {
                obj['exceptionType'] = ApiClient.convertToType(data['exceptionType'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [ClusterDetails]);
            }
            if (data.hasOwnProperty('routeTable')) {
                obj['routeTable'] = ClusterResponseAllOfRouteTable.constructFromObject(data['routeTable']);
            }
            if (data.hasOwnProperty('information')) {
                obj['information'] = ApiClient.convertToType(data['information'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cursor`
        if (data['cursor']) { // data not null
          SuccessCursor.validateJSON(data['cursor']);
        }
        // ensure the json data is a string
        if (data['debug'] && !(typeof data['debug'] === 'string' || data['debug'] instanceof String)) {
            throw new Error("Expected the field `debug` to be a primitive type in the JSON string but got " + data['debug']);
        }
        // ensure the json data is a string
        if (data['exceptionType'] && !(typeof data['exceptionType'] === 'string' || data['exceptionType'] instanceof String)) {
            throw new Error("Expected the field `exceptionType` to be a primitive type in the JSON string but got " + data['exceptionType']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        if (data['data']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['data'])) {
                throw new Error("Expected the field `data` to be an array in the JSON data but got " + data['data']);
            }
            // validate the optional field `data` (array)
            for (const item of data['data']) {
                ClusterDetails.validateJSON(item);
            };
        }
        // validate the optional field `routeTable`
        if (data['routeTable']) { // data not null
          ClusterResponseAllOfRouteTable.validateJSON(data['routeTable']);
        }
        // ensure the json data is a string
        if (data['information'] && !(typeof data['information'] === 'string' || data['information'] instanceof String)) {
            throw new Error("Expected the field `information` to be a primitive type in the JSON string but got " + data['information']);
        }

        return true;
    }


}



/**
 * @member {module:com.alterian.jo.model/SuccessCursor} cursor
 */
ClusterResponse.prototype['cursor'] = undefined;

/**
 * @member {String} debug
 */
ClusterResponse.prototype['debug'] = undefined;

/**
 * @member {String} exceptionType
 */
ClusterResponse.prototype['exceptionType'] = undefined;

/**
 * @member {String} message
 */
ClusterResponse.prototype['message'] = undefined;

/**
 * @member {String} status
 */
ClusterResponse.prototype['status'] = undefined;

/**
 * @member {Array.<module:com.alterian.jo.model/ClusterDetails>} data
 */
ClusterResponse.prototype['data'] = undefined;

/**
 * @member {module:com.alterian.jo.model/ClusterResponseAllOfRouteTable} routeTable
 */
ClusterResponse.prototype['routeTable'] = undefined;

/**
 * @member {String} information
 */
ClusterResponse.prototype['information'] = undefined;


// Implement Success interface:
/**
 * @member {module:com.alterian.jo.model/SuccessCursor} cursor
 */
Success.prototype['cursor'] = undefined;
// Implement ApiError interface:
/**
 * @member {String} debug
 */
ApiError.prototype['debug'] = undefined;
/**
 * @member {String} exceptionType
 */
ApiError.prototype['exceptionType'] = undefined;
/**
 * @member {String} message
 */
ApiError.prototype['message'] = undefined;
/**
 * @member {String} status
 */
ApiError.prototype['status'] = undefined;




export default ClusterResponse;

