/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RemoteObjectEnum from './RemoteObjectEnum';

/**
 * The ConsistencyReport model module.
 * @module com.alterian.jo.model/ConsistencyReport
 * @version 4.30.49
 */
class ConsistencyReport {
    /**
     * Constructs a new <code>ConsistencyReport</code>.
     * @alias module:com.alterian.jo.model/ConsistencyReport
     */
    constructor() { 
        
        ConsistencyReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsistencyReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.jo.model/ConsistencyReport} obj Optional instance to populate.
     * @return {module:com.alterian.jo.model/ConsistencyReport} The populated <code>ConsistencyReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsistencyReport();

            if (data.hasOwnProperty('objectType')) {
                obj['objectType'] = RemoteObjectEnum.constructFromObject(data['objectType']);
            }
            if (data.hasOwnProperty('isConsistent')) {
                obj['isConsistent'] = ApiClient.convertToType(data['isConsistent'], 'Boolean');
            }
            if (data.hasOwnProperty('localCount')) {
                obj['localCount'] = ApiClient.convertToType(data['localCount'], 'Number');
            }
            if (data.hasOwnProperty('remoteCount')) {
                obj['remoteCount'] = ApiClient.convertToType(data['remoteCount'], 'Number');
            }
            if (data.hasOwnProperty('missingRemotely')) {
                obj['missingRemotely'] = ApiClient.convertToType(data['missingRemotely'], ['String']);
            }
            if (data.hasOwnProperty('missingLocally')) {
                obj['missingLocally'] = ApiClient.convertToType(data['missingLocally'], ['String']);
            }
            if (data.hasOwnProperty('differentLocally')) {
                obj['differentLocally'] = ApiClient.convertToType(data['differentLocally'], ['String']);
            }
            if (data.hasOwnProperty('reportedExceptions')) {
                obj['reportedExceptions'] = ApiClient.convertToType(data['reportedExceptions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsistencyReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsistencyReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['missingRemotely'])) {
            throw new Error("Expected the field `missingRemotely` to be an array in the JSON data but got " + data['missingRemotely']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['missingLocally'])) {
            throw new Error("Expected the field `missingLocally` to be an array in the JSON data but got " + data['missingLocally']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['differentLocally'])) {
            throw new Error("Expected the field `differentLocally` to be an array in the JSON data but got " + data['differentLocally']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reportedExceptions'])) {
            throw new Error("Expected the field `reportedExceptions` to be an array in the JSON data but got " + data['reportedExceptions']);
        }

        return true;
    }


}



/**
 * @member {module:com.alterian.jo.model/RemoteObjectEnum} objectType
 */
ConsistencyReport.prototype['objectType'] = undefined;

/**
 * @member {Boolean} isConsistent
 */
ConsistencyReport.prototype['isConsistent'] = undefined;

/**
 * @member {Number} localCount
 */
ConsistencyReport.prototype['localCount'] = undefined;

/**
 * @member {Number} remoteCount
 */
ConsistencyReport.prototype['remoteCount'] = undefined;

/**
 * @member {Array.<String>} missingRemotely
 */
ConsistencyReport.prototype['missingRemotely'] = undefined;

/**
 * @member {Array.<String>} missingLocally
 */
ConsistencyReport.prototype['missingLocally'] = undefined;

/**
 * @member {Array.<String>} differentLocally
 */
ConsistencyReport.prototype['differentLocally'] = undefined;

/**
 * @member {Array.<String>} reportedExceptions
 */
ConsistencyReport.prototype['reportedExceptions'] = undefined;






export default ConsistencyReport;

