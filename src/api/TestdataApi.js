/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TargetEnum from '../com.alterian.jo.model/TargetEnum';

/**
* Testdata service.
* @module api/TestdataApi
* @version 4.29.139
*/
export default class TestdataApi {

    /**
    * Constructs a new TestdataApi. 
    * @alias module:api/TestdataApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Download user defined test data for a specific rule as JSON
     * @param {module:com.alterian.jo.model/TargetEnum} target Target - is where rule is published.
     * @param {String} client Client name
     * @param {String} rulename Rule name
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    downloadTestdataTargetClientRulenameGetWithHttpInfo(target, client, rulename) {
      let postBody = null;
      // verify the required parameter 'target' is set
      if (target === undefined || target === null) {
        throw new Error("Missing the required parameter 'target' when calling downloadTestdataTargetClientRulenameGet");
      }
      // verify the required parameter 'client' is set
      if (client === undefined || client === null) {
        throw new Error("Missing the required parameter 'client' when calling downloadTestdataTargetClientRulenameGet");
      }
      // verify the required parameter 'rulename' is set
      if (rulename === undefined || rulename === null) {
        throw new Error("Missing the required parameter 'rulename' when calling downloadTestdataTargetClientRulenameGet");
      }

      let pathParams = {
        'target': target,
        'client': client,
        'rulename': rulename
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/download/testdata/{target}/{client}/{rulename}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Download user defined test data for a specific rule as JSON
     * @param {module:com.alterian.jo.model/TargetEnum} target Target - is where rule is published.
     * @param {String} client Client name
     * @param {String} rulename Rule name
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    downloadTestdataTargetClientRulenameGet(target, client, rulename) {
      return this.downloadTestdataTargetClientRulenameGetWithHttpInfo(target, client, rulename)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * List all user defined test data across all rules.
     * @param {Object} opts Optional parameters
     * @param {Number} [from] The zero-based index of the first item to return.
     * @param {Number} [to] The zero-based index of the last item to return.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    testdataGetWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/testdata', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List all user defined test data across all rules.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.from The zero-based index of the first item to return.
     * @param {Number} opts.to The zero-based index of the last item to return.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    testdataGet(opts) {
      return this.testdataGetWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
