/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyOrchestrationApi);
  }
}(this, function(expect, JourneyOrchestrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyOrchestrationApi.QueueApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QueueApi', function() {
    describe('queueClientDelete', function() {
      it('should call queueClientDelete successfully', function(done) {
        //uncomment below and update the code to test queueClientDelete
        //instance.queueClientDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientGet', function() {
      it('should call queueClientGet successfully', function(done) {
        //uncomment below and update the code to test queueClientGet
        //instance.queueClientGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetDelete', function() {
      it('should call queueClientTargetDelete successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetDelete
        //instance.queueClientTargetDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetGet', function() {
      it('should call queueClientTargetGet successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetGet
        //instance.queueClientTargetGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetQueueNameAckPost', function() {
      it('should call queueClientTargetQueueNameAckPost successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetQueueNameAckPost
        //instance.queueClientTargetQueueNameAckPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetQueueNameDelete', function() {
      it('should call queueClientTargetQueueNameDelete successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetQueueNameDelete
        //instance.queueClientTargetQueueNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetQueueNameGet', function() {
      it('should call queueClientTargetQueueNameGet successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetQueueNameGet
        //instance.queueClientTargetQueueNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetQueueNameMessagesGet', function() {
      it('should call queueClientTargetQueueNameMessagesGet successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetQueueNameMessagesGet
        //instance.queueClientTargetQueueNameMessagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetQueueNameMessagesPost', function() {
      it('should call queueClientTargetQueueNameMessagesPost successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetQueueNameMessagesPost
        //instance.queueClientTargetQueueNameMessagesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetQueueNamePost', function() {
      it('should call queueClientTargetQueueNamePost successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetQueueNamePost
        //instance.queueClientTargetQueueNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetQueueNamePurgePost', function() {
      it('should call queueClientTargetQueueNamePurgePost successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetQueueNamePurgePost
        //instance.queueClientTargetQueueNamePurgePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueClientTargetQueueNamePut', function() {
      it('should call queueClientTargetQueueNamePut successfully', function(done) {
        //uncomment below and update the code to test queueClientTargetQueueNamePut
        //instance.queueClientTargetQueueNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queueGet', function() {
      it('should call queueGet successfully', function(done) {
        //uncomment below and update the code to test queueGet
        //instance.queueGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
