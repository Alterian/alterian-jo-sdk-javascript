/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyOrchestrationApi);
  }
}(this, function(expect, JourneyOrchestrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyOrchestrationApi.AuthApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthApi', function() {
    describe('authPermissionGet', function() {
      it('should call authPermissionGet successfully', function(done) {
        //uncomment below and update the code to test authPermissionGet
        //instance.authPermissionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleGet', function() {
      it('should call authRoleGet successfully', function(done) {
        //uncomment below and update the code to test authRoleGet
        //instance.authRoleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleNameClientClientNameDelete', function() {
      it('should call authRoleNameClientClientNameDelete successfully', function(done) {
        //uncomment below and update the code to test authRoleNameClientClientNameDelete
        //instance.authRoleNameClientClientNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleNameClientClientNamePost', function() {
      it('should call authRoleNameClientClientNamePost successfully', function(done) {
        //uncomment below and update the code to test authRoleNameClientClientNamePost
        //instance.authRoleNameClientClientNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleNameClientGet', function() {
      it('should call authRoleNameClientGet successfully', function(done) {
        //uncomment below and update the code to test authRoleNameClientGet
        //instance.authRoleNameClientGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleNameDelete', function() {
      it('should call authRoleNameDelete successfully', function(done) {
        //uncomment below and update the code to test authRoleNameDelete
        //instance.authRoleNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleNameGet', function() {
      it('should call authRoleNameGet successfully', function(done) {
        //uncomment below and update the code to test authRoleNameGet
        //instance.authRoleNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleNamePermissionDelete', function() {
      it('should call authRoleNamePermissionDelete successfully', function(done) {
        //uncomment below and update the code to test authRoleNamePermissionDelete
        //instance.authRoleNamePermissionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleNamePermissionGet', function() {
      it('should call authRoleNamePermissionGet successfully', function(done) {
        //uncomment below and update the code to test authRoleNamePermissionGet
        //instance.authRoleNamePermissionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRoleNamePermissionPost', function() {
      it('should call authRoleNamePermissionPost successfully', function(done) {
        //uncomment below and update the code to test authRoleNamePermissionPost
        //instance.authRoleNamePermissionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authRolePost', function() {
      it('should call authRolePost successfully', function(done) {
        //uncomment below and update the code to test authRolePost
        //instance.authRolePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authSiteGet', function() {
      it('should call authSiteGet successfully', function(done) {
        //uncomment below and update the code to test authSiteGet
        //instance.authSiteGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authSiteIdDelete', function() {
      it('should call authSiteIdDelete successfully', function(done) {
        //uncomment below and update the code to test authSiteIdDelete
        //instance.authSiteIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authSiteIdGet', function() {
      it('should call authSiteIdGet successfully', function(done) {
        //uncomment below and update the code to test authSiteIdGet
        //instance.authSiteIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authSiteIdUserGet', function() {
      it('should call authSiteIdUserGet successfully', function(done) {
        //uncomment below and update the code to test authSiteIdUserGet
        //instance.authSiteIdUserGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authSiteIdUserNameDelete', function() {
      it('should call authSiteIdUserNameDelete successfully', function(done) {
        //uncomment below and update the code to test authSiteIdUserNameDelete
        //instance.authSiteIdUserNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authSiteIdUserNamePost', function() {
      it('should call authSiteIdUserNamePost successfully', function(done) {
        //uncomment below and update the code to test authSiteIdUserNamePost
        //instance.authSiteIdUserNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authSitePost', function() {
      it('should call authSitePost successfully', function(done) {
        //uncomment below and update the code to test authSitePost
        //instance.authSitePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserGet', function() {
      it('should call authUserGet successfully', function(done) {
        //uncomment below and update the code to test authUserGet
        //instance.authUserGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameClientClientNameDelete', function() {
      it('should call authUserNameClientClientNameDelete successfully', function(done) {
        //uncomment below and update the code to test authUserNameClientClientNameDelete
        //instance.authUserNameClientClientNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameClientClientNamePost', function() {
      it('should call authUserNameClientClientNamePost successfully', function(done) {
        //uncomment below and update the code to test authUserNameClientClientNamePost
        //instance.authUserNameClientClientNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameClientGet', function() {
      it('should call authUserNameClientGet successfully', function(done) {
        //uncomment below and update the code to test authUserNameClientGet
        //instance.authUserNameClientGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameDelete', function() {
      it('should call authUserNameDelete successfully', function(done) {
        //uncomment below and update the code to test authUserNameDelete
        //instance.authUserNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameGet', function() {
      it('should call authUserNameGet successfully', function(done) {
        //uncomment below and update the code to test authUserNameGet
        //instance.authUserNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNamePermissionGet', function() {
      it('should call authUserNamePermissionGet successfully', function(done) {
        //uncomment below and update the code to test authUserNamePermissionGet
        //instance.authUserNamePermissionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNamePermissionPermissionDelete', function() {
      it('should call authUserNamePermissionPermissionDelete successfully', function(done) {
        //uncomment below and update the code to test authUserNamePermissionPermissionDelete
        //instance.authUserNamePermissionPermissionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNamePermissionPermissionPost', function() {
      it('should call authUserNamePermissionPermissionPost successfully', function(done) {
        //uncomment below and update the code to test authUserNamePermissionPermissionPost
        //instance.authUserNamePermissionPermissionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameRoleGet', function() {
      it('should call authUserNameRoleGet successfully', function(done) {
        //uncomment below and update the code to test authUserNameRoleGet
        //instance.authUserNameRoleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameRoleRoleNameDelete', function() {
      it('should call authUserNameRoleRoleNameDelete successfully', function(done) {
        //uncomment below and update the code to test authUserNameRoleRoleNameDelete
        //instance.authUserNameRoleRoleNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameRoleRoleNamePost', function() {
      it('should call authUserNameRoleRoleNamePost successfully', function(done) {
        //uncomment below and update the code to test authUserNameRoleRoleNamePost
        //instance.authUserNameRoleRoleNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameTokenTokenNameDelete', function() {
      it('should call authUserNameTokenTokenNameDelete successfully', function(done) {
        //uncomment below and update the code to test authUserNameTokenTokenNameDelete
        //instance.authUserNameTokenTokenNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserNameTokenTokenNamePost', function() {
      it('should call authUserNameTokenTokenNamePost successfully', function(done) {
        //uncomment below and update the code to test authUserNameTokenTokenNamePost
        //instance.authUserNameTokenTokenNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authUserPost', function() {
      it('should call authUserPost successfully', function(done) {
        //uncomment below and update the code to test authUserPost
        //instance.authUserPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
