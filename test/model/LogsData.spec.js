/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyOrchestrationApi);
  }
}(this, function(expect, JourneyOrchestrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyOrchestrationApi.LogsData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LogsData', function() {
    it('should create an instance of LogsData', function() {
      // uncomment below and update the code to test LogsData
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be.a(JourneyOrchestrationApi.LogsData);
    });

    it('should have the property agent (base name: "agent")', function() {
      // uncomment below and update the code to test the property agent
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property client (base name: "client")', function() {
      // uncomment below and update the code to test the property client
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property ecs (base name: "ecs")', function() {
      // uncomment below and update the code to test the property ecs
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property event (base name: "event")', function() {
      // uncomment below and update the code to test the property event
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property host (base name: "host")', function() {
      // uncomment below and update the code to test the property host
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property info (base name: "info")', function() {
      // uncomment below and update the code to test the property info
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property input (base name: "input")', function() {
      // uncomment below and update the code to test the property input
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "level")', function() {
      // uncomment below and update the code to test the property level
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property log (base name: "log")', function() {
      // uncomment below and update the code to test the property log
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property logType (base name: "log_type")', function() {
      // uncomment below and update the code to test the property logType
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property loglevel (base name: "loglevel")', function() {
      // uncomment below and update the code to test the property loglevel
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property msg (base name: "msg")', function() {
      // uncomment below and update the code to test the property msg
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property node (base name: "node")', function() {
      // uncomment below and update the code to test the property node
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property nodeName (base name: "nodeName")', function() {
      // uncomment below and update the code to test the property nodeName
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property nodeDesc (base name: "node_desc")', function() {
      // uncomment below and update the code to test the property nodeDesc
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property restartSequence (base name: "restartSequence")', function() {
      // uncomment below and update the code to test the property restartSequence
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property rule (base name: "rule")', function() {
      // uncomment below and update the code to test the property rule
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property ruleLogEntry (base name: "rule_log_entry")', function() {
      // uncomment below and update the code to test the property ruleLogEntry
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property seq (base name: "seq")', function() {
      // uncomment below and update the code to test the property seq
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property step (base name: "step")', function() {
      // uncomment below and update the code to test the property step
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property target (base name: "target")', function() {
      // uncomment below and update the code to test the property target
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property templateUrl (base name: "templateUrl")', function() {
      // uncomment below and update the code to test the property templateUrl
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property tileId (base name: "tileId")', function() {
      // uncomment below and update the code to test the property tileId
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property tileName (base name: "tileName")', function() {
      // uncomment below and update the code to test the property tileName
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new JourneyOrchestrationApi.LogsData();
      //expect(instance).to.be();
    });

  });

}));
