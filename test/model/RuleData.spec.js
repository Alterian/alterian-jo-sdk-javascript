/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyOrchestrationApi);
  }
}(this, function(expect, JourneyOrchestrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyOrchestrationApi.RuleData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RuleData', function() {
    it('should create an instance of RuleData', function() {
      // uncomment below and update the code to test RuleData
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be.a(JourneyOrchestrationApi.RuleData);
    });

    it('should have the property apiVersion (base name: "apiVersion")', function() {
      // uncomment below and update the code to test the property apiVersion
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property autoloader (base name: "autoloader")', function() {
      // uncomment below and update the code to test the property autoloader
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property client (base name: "client")', function() {
      // uncomment below and update the code to test the property client
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property datagrids (base name: "datagrids")', function() {
      // uncomment below and update the code to test the property datagrids
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property edges (base name: "edges")', function() {
      // uncomment below and update the code to test the property edges
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property exampleData (base name: "exampleData")', function() {
      // uncomment below and update the code to test the property exampleData
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property hasAutoloader (base name: "hasAutoloader")', function() {
      // uncomment below and update the code to test the property hasAutoloader
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property hasRuledesigner (base name: "hasRuledesigner")', function() {
      // uncomment below and update the code to test the property hasRuledesigner
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property helpLink (base name: "helpLink")', function() {
      // uncomment below and update the code to test the property helpLink
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property isValid (base name: "isValid")', function() {
      // uncomment below and update the code to test the property isValid
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property journeys (base name: "journeys")', function() {
      // uncomment below and update the code to test the property journeys
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property lastSeen (base name: "lastSeen")', function() {
      // uncomment below and update the code to test the property lastSeen
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property latestTemplateVersions (base name: "latestTemplateVersions")', function() {
      // uncomment below and update the code to test the property latestTemplateVersions
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property logLevel (base name: "logLevel")', function() {
      // uncomment below and update the code to test the property logLevel
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property modifiedDate (base name: "modifiedDate")', function() {
      // uncomment below and update the code to test the property modifiedDate
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property newerTemplateVersion (base name: "newerTemplateVersion")', function() {
      // uncomment below and update the code to test the property newerTemplateVersion
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property priorityWeighting (base name: "priorityWeighting")', function() {
      // uncomment below and update the code to test the property priorityWeighting
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property relativeTime (base name: "relativeTime")', function() {
      // uncomment below and update the code to test the property relativeTime
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property requestedAt (base name: "requestedAt")', function() {
      // uncomment below and update the code to test the property requestedAt
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property rulegroups (base name: "rulegroups")', function() {
      // uncomment below and update the code to test the property rulegroups
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property securityOption (base name: "securityOption")', function() {
      // uncomment below and update the code to test the property securityOption
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property stateModifiedDate (base name: "stateModifiedDate")', function() {
      // uncomment below and update the code to test the property stateModifiedDate
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property statistics (base name: "statistics")', function() {
      // uncomment below and update the code to test the property statistics
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property target (base name: "target")', function() {
      // uncomment below and update the code to test the property target
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property templateName (base name: "templateName")', function() {
      // uncomment below and update the code to test the property templateName
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property templateURL (base name: "templateURL")', function() {
      // uncomment below and update the code to test the property templateURL
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property templateVersion (base name: "templateVersion")', function() {
      // uncomment below and update the code to test the property templateVersion
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property tiles (base name: "tiles")', function() {
      // uncomment below and update the code to test the property tiles
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property urlPath (base name: "urlPath")', function() {
      // uncomment below and update the code to test the property urlPath
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property wtlLoggingActive (base name: "wtlLoggingActive")', function() {
      // uncomment below and update the code to test the property wtlLoggingActive
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property wtlLoggingAllowed (base name: "wtlLoggingAllowed")', function() {
      // uncomment below and update the code to test the property wtlLoggingAllowed
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property requestContentType (base name: "requestContentType")', function() {
      // uncomment below and update the code to test the property requestContentType
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

    it('should have the property snoozed (base name: "snoozed")', function() {
      // uncomment below and update the code to test the property snoozed
      //var instance = new JourneyOrchestrationApi.RuleData();
      //expect(instance).to.be();
    });

  });

}));
