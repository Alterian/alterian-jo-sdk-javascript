/**
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyOrchestrationApi);
  }
}(this, function(expect, JourneyOrchestrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyOrchestrationApi.RuleGroupParameter();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RuleGroupParameter', function() {
    it('should create an instance of RuleGroupParameter', function() {
      // uncomment below and update the code to test RuleGroupParameter
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be.a(JourneyOrchestrationApi.RuleGroupParameter);
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property usingGlobal (base name: "usingGlobal")', function() {
      // uncomment below and update the code to test the property usingGlobal
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property isEditable (base name: "IsEditable")', function() {
      // uncomment below and update the code to test the property isEditable
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "Position")', function() {
      // uncomment below and update the code to test the property position
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property referencedProperty (base name: "ReferencedProperty")', function() {
      // uncomment below and update the code to test the property referencedProperty
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property referencedRule (base name: "ReferencedRule")', function() {
      // uncomment below and update the code to test the property referencedRule
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property propertyType (base name: "PropertyType")', function() {
      // uncomment below and update the code to test the property propertyType
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property units (base name: "Units")', function() {
      // uncomment below and update the code to test the property units
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property globalParam (base name: "globalParam")', function() {
      // uncomment below and update the code to test the property globalParam
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property defaultValue (base name: "DefaultValue")', function() {
      // uncomment below and update the code to test the property defaultValue
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property isVisible (base name: "IsVisible")', function() {
      // uncomment below and update the code to test the property isVisible
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property templatename (base name: "Templatename")', function() {
      // uncomment below and update the code to test the property templatename
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property dataType (base name: "DataType")', function() {
      // uncomment below and update the code to test the property dataType
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property targets (base name: "Targets")', function() {
      // uncomment below and update the code to test the property targets
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property pickListItems (base name: "PickListItems")', function() {
      // uncomment below and update the code to test the property pickListItems
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property iconAndColor (base name: "IconAndColor")', function() {
      // uncomment below and update the code to test the property iconAndColor
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

    it('should have the property templateId (base name: "TemplateId")', function() {
      // uncomment below and update the code to test the property templateId
      //var instance = new JourneyOrchestrationApi.RuleGroupParameter();
      //expect(instance).to.be();
    });

  });

}));
